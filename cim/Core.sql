/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 16.1 		*/
/*  Created On : 14-Oct-2025 3:07:43 PM 				*/
/*  DBMS       : SQLite 								*/
/* ---------------------------------------------------- */

/* Drop Tables */

DROP TABLE IF EXISTS ACLineSegment
;

DROP TABLE IF EXISTS BaseVoltage
;

DROP TABLE IF EXISTS Conductor
;

DROP TABLE IF EXISTS CoordinateSystem
;

DROP TABLE IF EXISTS EnergyConsumer
;

DROP TABLE IF EXISTS Equipment
;

DROP TABLE IF EXISTS GeneratingUnit
;

DROP TABLE IF EXISTS IdentifiedObject
;

DROP TABLE IF EXISTS LinearShuntCompensator
;

DROP TABLE IF EXISTS LoadResponseCharacteristic
;

DROP TABLE IF EXISTS PositionPoint
;

DROP TABLE IF EXISTS PowerTransformer
;

DROP TABLE IF EXISTS PowerTransformerEnd
;

DROP TABLE IF EXISTS RotatingMachine
;

DROP TABLE IF EXISTS ShuntCompensator
;

DROP TABLE IF EXISTS SynchronousMachine
;

DROP TABLE IF EXISTS TransformerCoreAdmittance
;

DROP TABLE IF EXISTS TransformerEnd
;

DROP TABLE IF EXISTS TransformerMeshImpedance
;

/* Create Tables with Primary and Foreign Keys, Check and Unique Constraints */

	-- A line segment is a conductor or combination of conductors, with consistent electrical characteristics along its length, building a single electrical system that carries alternating current between two points in the power system. The BaseVoltage at the two ends of a line segment shall have the same BaseVoltage.nominalVoltage. However, boundary lines may have slightly different BaseVoltage.nominalVoltages and variation is allowed. Larger voltage difference in general requires use of an equivalent branch. Line segment impedances can be either directly described in electrical terms or physical line detail can be provided from which impedances can be calculated. Directly described impedances For symmetrical, transposed three phase line segments, it is sufficient to use attributes of the line segment, which describe impedances and admittances for the entire length of the line segment.  Additionally, line segment impedances can be computed by using line segment length and associated per length impedances. Unbalanced modeling of impedances is supported by the per length phase impedance matrix (PerLengthPhaseImpedance) in conjunction with phase-to-sequence number mapping supplied by either ACLineSegmentPhase or WirePosition. The sequence numbers are referenced by the row and column attributes of the per length phase impedance matrix. This method enables single-phase and two-phase line segments, and transpositions of phases, to be described using the same per length phase impedance matrix. The length of the line segment is used in the computation of total impedance values for the line segment. Line detail characteristics There are three approaches to providing line detail and all use WireAssembly to supply line positions: 	- Option 1 - WireAssembly supplies only line positions. ACLineSegmentPhase points to wire type and intraphase spacing and supplies the phase-to-sequence number mapping. 	- Option 2 - WireAssembly supplies line position and, for each position, also supplies wire type and intraphase spacing. ACLineSegmentPhase supplies the phase-to-sequence number mapping. 	- Option 3 - WireAssembly supplies line position and, for each position, also supplies wire type and intraphase spacing and phase. WireAssembly therefore supplies the phase-to-sequence number mapping and ACLineSegmentPhase is not needed.
CREATE TABLE ACLineSegment
(
	b0ch REAL NULL,	-- Zero sequence shunt (charging) susceptance, uniformly distributed, of the entire line segment.
	bch REAL NULL,	-- Positive sequence shunt (charging) susceptance, uniformly distributed, of the entire line segment.  This value represents the full charging over the full length of the line segment.
	r REAL NULL,	-- Positive sequence series resistance of the entire line segment.
	r0 REAL NULL,	-- Zero sequence series resistance of the entire line segment.
	x REAL NULL,	-- Positive sequence series reactance of the entire line segment.
	x0 REAL NULL	-- Zero sequence series reactance of the entire line segment.
)
;

	-- Defines a system base voltage which is referenced. This may be different than the rated voltage. 
CREATE TABLE BaseVoltage
(
	nominalVoltage REAL NULL	-- The power system resource's base voltage, expressed on a phase-to-phase (line-to-line) basis. Shall be a positive value and not zero.
)
;

	-- Combination of conducting material with consistent electrical characteristics, building a single electrical system, used to carry current between points in the power system.  
CREATE TABLE Conductor
(
	length REAL NULL	-- Segment length for calculating line segment capabilities.
)
;

	-- Coordinate reference system.
CREATE TABLE CoordinateSystem
(
	crsUrn TEXT NULL COLLATE NOCASE	-- A Uniform Resource Name (URN) for the coordinate reference system (crs) used to define 'Location.PositionPoints'. An example would be the European Petroleum Survey Group (EPSG) code for a coordinate reference system, defined in URN under the Open Geospatial Consortium (OGC) namespace as: urn:ogc:def:crs:EPSG::XXXX, where XXXX is an EPSG code (a full list of codes can be found at the EPSG Registry web site http://www.epsg-registry.org/). To define the coordinate system as being WGS84 (latitude, longitude) using an EPSG OGC, this attribute would be urn:ogc:def:crs:EPSG::4236. A profile should limit this code to a set of allowed URNs agreed to by all sending and receiving parties.
)
;

	-- Generic user of energy - a  point of consumption on the power system model. EnergyConsumer.pfixed, .qfixed, .pfixedPct and .qfixedPct have meaning only if there is no LoadResponseCharacteristic associated with EnergyConsumer or if LoadResponseCharacteristic.exponentModel is set to False.
CREATE TABLE EnergyConsumer
(
	customerCount INTEGER NULL,	-- Number of individual customers represented by this demand.
	grounded INTEGER NULL,	-- Required for Yn and I connections (as represented by EnergyConsumer.phaseConnection). True if the neutral is solidly grounded.
	pfixed REAL NULL,	-- Active power of the load that is a fixed quantity and does not vary as load group value varies. Load sign convention is used, i.e. positive sign means flow out from a node.  
	pfixedPct REAL NULL,	-- Fixed active power as a percentage of load group fixed active power. Used to represent the time-varying components.  Load sign convention is used, i.e. positive sign means flow out from a node.
	phaseConnection INTEGER NULL,	-- The type of phase connection, such as wye or delta.
	qfixed REAL NULL,	-- Reactive power of the load that is a fixed quantity and does not vary as load group value varies. Load sign convention is used, i.e. positive sign means flow out from a node.
	qfixedPct REAL NULL,	-- Fixed reactive power as a percentage of load group fixed reactive power. Used to represent the time-varying components.  Load sign convention is used, i.e. positive sign means flow out from a node.
	p REAL NULL,	-- Active power of the load. Load sign convention is used, i.e. positive sign means flow out from a node. For voltage dependent loads the value is at rated voltage. Starting value for a steady state solution.
	q REAL NULL	-- Reactive power of the load. Load sign convention is used, i.e. positive sign means flow out from a node. For voltage dependent loads the value is at rated voltage. Starting value for a steady state solution.
)
;

	-- The parts of a power system that are physical devices, electronic or mechanical.
CREATE TABLE Equipment
(
	inService INTEGER NULL	-- Specifies the availability of the equipment. True means the equipment is available for topology processing, which determines if the equipment is energized or not. False means that the equipment is treated by network applications as if it is not in the model.
)
;

	-- A single or set of synchronous machines for converting mechanical power into alternating-current power. For example, individual machines within a set may be defined for scheduling purposes while a single control signal is derived for the set. In this case there would be a GeneratingUnit for each member of the set and an additional GeneratingUnit corresponding to the set.
CREATE TABLE GeneratingUnit
(
	maxOperatingP REAL NULL,	-- This is the maximum operating active power limit the dispatcher can enter for this unit.
	minOperatingP REAL NULL	-- This is the minimum operating active power limit the dispatcher can enter for this unit.
)
;

	-- This is a class that provides common identification for all classes needing identification and naming attributes.
CREATE TABLE IdentifiedObject
(
	mRID TEXT NOT NULL COLLATE NOCASE PRIMARY KEY,	-- Master resource identifier issued by a model authority. The mRID is unique within an exchange context. Global uniqueness is easily achieved by using a UUID, as specified in IETF RFC 4122, for the mRID. The use of UUID is strongly recommended. For CIMXML data files in RDF syntax conforming to IEC 61970-552, the mRID is mapped to rdf:ID or rdf:about attributes that identify CIM object elements.
	name TEXT NULL COLLATE NOCASE	-- The name is any free human readable and possibly non unique text naming the object.
)
;

	-- A linear shunt compensator has banks or sections with equal admittance values.
CREATE TABLE LinearShuntCompensator
(
	b0PerSection REAL NULL,	-- Zero sequence shunt (charging) susceptance per section.
	bPerSection REAL NULL,	-- Positive sequence shunt (charging) susceptance per section.
	g0PerSection REAL NULL,	-- Zero sequence shunt (charging) conductance per section.
	gPerSection REAL NULL	-- Positive sequence shunt (charging) conductance per section.
)
;

	-- Models the characteristic response of the load demand due to changes in system conditions such as voltage and frequency. It is not related to demand response. If LoadResponseCharacteristic.exponentModel is True, the exponential voltage or frequency dependent models are specified and used as to calculate active and reactive power components of the load model. The equations to calculate active and reactive power components of the load model are internal to the power flow calculation, hence they use different quantities depending on the use case of the data exchange.  The equations for exponential voltage dependent load model injected power are:  pInjection= Pnominal* (Voltage/cim:BaseVoltage.nominalVoltage) ** cim:LoadResponseCharacteristic.pVoltageExponent qInjection= Qnominal* (Voltage/cim:BaseVoltage.nominalVoltage) ** cim:LoadResponseCharacteristic.qVoltageExponent  pInjection = Pnominal* (Frequency/(Nominal frequency))**cim:LoadResponseCharacteristic.pFrequencyExponent qInjection = Qnominal* (Frequency/(Nominal frequency))**cim:LoadResponseCharacteristic.qFrequencyExponent  Note that both voltage and frequency exponents could be used together so the full equation would be: pInjection = Pnominal* (Voltage/(cim:BaseVoltage.nominalVoltage))**cim:LoadResponseCharacteristic.pVoltageExponent * (Frequency/(base frequency))**cim:LoadResponseCharacteristic.pFrequencyExponent qInjection = Qnominal* (Voltage/(cim:BaseVoltage.nominalVoltage))**cim:LoadResponseCharacteristic.qVoltageExponent * (Frequency/(base frequency))**cim:LoadResponseCharacteristic.qFrequencyExponent  The voltage and frequency expressed in the equation are values obtained from solved power flow. Base voltage and base frequency are those derived from the connectivity of the static network model. Where:  1) * means "multiply" and ** is "raised to the power of"; 2) Pnominal and Qnominal represent the active power and reactive power at nominal voltage as any load described by the voltage exponential model shall be given at nominal voltage.  This means that EnergyConsumer.p and EnergyConsumer.q  are at nominal voltage. 3) After power flow is solved:  -pInjection and qInjection correspond to SvPowerflow.p and SvPowerflow.q respectively.   - Voltage corresponds to SvVoltage.v at the TopologicalNode where the load is connected.
CREATE TABLE LoadResponseCharacteristic
(
	exponentModel INTEGER NULL,	-- Indicates the exponential voltage dependency model is to be used. If false, the coefficient model is to be used. The exponential voltage dependency model consist of the attributes: - pVoltageExponent - qVoltageExponent - pFrequencyExponent - qFrequencyExponent. The coefficient model consist of the attributes: - pConstantImpedance - pConstantCurrent - pConstantPower - qConstantImpedance - qConstantCurrent - qConstantPower. The sum of pConstantImpedance, pConstantCurrent and pConstantPower shall equal 1. The sum of qConstantImpedance, qConstantCurrent and qConstantPower shall equal 1.
	pConstantCurrent REAL NULL,	-- Portion of active power load modelled as constant current.
	pConstantImpedance REAL NULL,	-- Portion of active power load modelled as constant impedance.
	pConstantPower REAL NULL,	-- Portion of active power load modelled as constant power.
	pFrequencyExponent REAL NULL,	-- Exponent of per unit frequency effecting active power.
	pVoltageExponent REAL NULL,	-- Exponent of per unit voltage effecting real power.
	qConstantCurrent REAL NULL,	-- Portion of reactive power load modelled as constant current.
	qConstantImpedance REAL NULL,	-- Portion of reactive power load modelled as constant impedance.
	qConstantPower REAL NULL,	-- Portion of reactive power load modelled as constant power.
	qFrequencyExponent REAL NULL,	-- Exponent of per unit frequency effecting reactive power.
	qVoltageExponent REAL NULL	-- Exponent of per unit voltage effecting reactive power.
)
;

	-- Set of spatial coordinates that determine a point, defined in the coordinate system specified in 'Location.CoordinateSystem'. Use a single position point instance to describe a point-oriented location. Use a sequence of position points to describe a line-oriented object (physical location of non-point oriented objects like cables or lines), or area of an object (like a substation or a geographical zone - in this case, have first and last position point with the same values).
CREATE TABLE PositionPoint
(
	xPosition REAL NULL,	-- X axis position.
	yPosition REAL NULL	-- Y axis position.
)
;

	-- An electrical device consisting of  two or more coupled windings, with or without a magnetic core, for introducing mutual coupling between electric circuits. Transformers can be used to control voltage and phase shift (active power flow). A power transformer may be composed of separate transformer tanks that need not be identical. A power transformer can be modelled with or without tanks and is intended for use in both balanced and unbalanced representations. A power transformer typically has two terminals, but may have one (grounding), three or more terminals. The inherited association ConductingEquipment.BaseVoltage should not be used. The association from TransformerEnd to BaseVoltage should be used instead.
CREATE TABLE PowerTransformer
(
	isPartOfGeneratorUnit INTEGER NULL,	-- Indicates whether the machine is part of a power station unit. Used for short circuit data exchange according to IEC 60909.  It has an impact on how the correction factors are calculated for transformers, since the transformer is not necessarily part of a synchronous machine and generating unit. It is not always possible to derive this information from the model. This is why the attribute is necessary.
	vectorGroup TEXT NULL COLLATE NOCASE	-- Vector group of the transformer for protective relaying, e.g., Dyn1. For unbalanced transformers, this may not be simply determined from the constituent winding connections and phase angle displacements. The vectorGroup string consists of the following components in the order listed: high voltage winding connection, mid voltage winding connection (for three winding transformers), phase displacement clock number from 0 to 11,  low voltage winding connection  phase displacement clock number from 0 to 11.   The winding connections are D (delta), Y (wye), YN (wye with neutral), Z (zigzag), ZN (zigzag with neutral), A (auto transformer). Upper case means the high voltage, lower case mid or low. The high voltage winding always has clock position 0 and is not included in the vector group string.  Some examples: YNy0 (two winding wye to wye with no phase displacement), YNd11 (two winding wye to delta with 330 degrees phase displacement), YNyn0d5 (three winding transformer wye with neutral high voltage, wye with neutral mid voltage and no phase displacement, delta low voltage with 150 degrees displacement). Phase displacement is defined as the angular difference between the phasors representing the voltages between the neutral point (real or imaginary) and the corresponding terminals of two windings, a positive sequence voltage system being applied to the high-voltage terminals, following each other in alphabetical sequence if they are lettered, or in numerical sequence if they are numbered: the phasors are assumed to rotate in a counter-clockwise sense.
)
;

	-- A PowerTransformerEnd is associated with each Terminal of a PowerTransformer. The impedance values r, r0, x, and x0 of a PowerTransformerEnd represents a star equivalent as follows. 1) two PowerTransformerEnd-s shall be defined for a two Terminal PowerTransformer even if the two PowerTransformerEnd-s have the same rated voltage. The high voltage PowerTransformerEnd (TransformerEnd.endNumber=1) is the one used to exchange resistances (r, r0) and reactances (x, x0) of the PowerTransformer while the low voltage PowerTransformerEnd (TransformerEnd.endNumber=2) shall have zero impedance values. 2) for a three Terminal PowerTransformer the three PowerTransformerEnds represent a star equivalent with each leg in the star represented by r, r0, x, and x0 values. 3) For a three Terminal transformer each PowerTransformerEnd shall have g, g0, b and b0 values corresponding to the no load losses distributed on the three PowerTransformerEnds. The total no load loss shunt impedances may also be placed at one of the PowerTransformerEnds, preferably the end numbered 1, having the shunt values on end 1.  This is the preferred way. 4) for a PowerTransformer with more than three Terminals the PowerTransformerEnd impedance values cannot be used. Instead use the TransformerMeshImpedance or split the transformer into multiple PowerTransformers. Each PowerTransformerEnd must be contained by a PowerTransformer. Because a PowerTransformerEnd (or any other object) can not be contained by more than one parent, a PowerTransformerEnd can not have an association to an EquipmentContainer (Substation, VoltageLevel, etc).
CREATE TABLE PowerTransformerEnd
(
	connectionKind INTEGER NULL,	-- Kind of connection.
	phaseAngleClock INTEGER NULL,	-- Terminal voltage phase angle displacement where 360 degrees are represented with clock hours. The valid values are 0 to 11. For example, for the secondary side end of a transformer with vector group code of 'Dyn11', specify the connection kind as wye with neutral and specify the phase angle of the clock as 11.  The clock value of the transformer end number specified as 1, is assumed to be zero.  Note the transformer end number is not assumed to be the same as the terminal sequence number.
	ratedS REAL NULL,	-- Normal apparent power rating. The attribute shall be a positive value. For a two-winding transformer the values for the high and low voltage sides shall be identical. 
	ratedU REAL NULL	-- Rated voltage: phase-phase for three-phase windings, and either phase-phase or phase-neutral for single-phase windings. A high voltage side, as given by TransformerEnd.endNumber, shall have a ratedU that is greater than or equal to ratedU for the lower voltage sides. The attribute shall be a positive value.
)
;

	-- A rotating machine which may be used as a generator or motor.
CREATE TABLE RotatingMachine
(
	p REAL NULL,	-- Active power injection. Load sign convention is used, i.e. positive sign means flow out from a node. Starting value for a steady state solution.
	ratedS REAL NULL,	-- Nameplate apparent power rating for the unit. The attribute shall have a positive value.
	q REAL NULL,	-- Reactive power injection. Load sign convention is used, i.e. positive sign means flow out from a node. Starting value for a steady state solution.
	ratedU REAL NULL	-- Rated voltage (nameplate data, Ur in IEC 60909-0). It is primarily used for short circuit data exchange according to IEC 60909. The attribute shall be a positive value.
)
;

	-- A shunt capacitor or reactor or switchable bank of shunt capacitors or reactors. A section of a shunt compensator is an individual capacitor or reactor. A negative value for bPerSection indicates that the compensator is a reactor. ShuntCompensator is a single terminal device.  Ground is implied.
CREATE TABLE ShuntCompensator
(
	maximumSections INTEGER NULL,	-- The maximum number of sections that may be switched in. 
	nomU REAL NULL,	-- The voltage at which the nominal reactive power may be calculated. This should normally be within 10% of the voltage at which the capacitor is connected to the network.
	sections INTEGER NULL	-- Shunt compensator sections in use. Starting value for steady state solution. The attribute shall be a positive value or zero. Non integer values are allowed to support continuous variables. The reasons for continuous value are to support study cases where no discrete shunt compensators has yet been designed, a solutions where a narrow voltage band force the sections to oscillate or accommodate for a continuous solution as input.  For LinearShuntConpensator the value shall be between zero and ShuntCompensator.maximumSections. At value zero the shunt compensator conductance and admittance is zero. Linear interpolation of conductance and admittance between the previous and next integer section is applied in case of non-integer values. For NonlinearShuntCompensator(-s) shall only be set to one of the NonlinearShuntCompenstorPoint.sectionNumber. There is no interpolation between NonlinearShuntCompenstorPoint(-s).
)
;

	-- An electromechanical device that operates with shaft rotating synchronously with the network. It is a single machine operating either as a generator or synchronous condenser or pump.
CREATE TABLE SynchronousMachine
(
	maxQ REAL NULL,	-- Maximum reactive power limit. This is the maximum (nameplate) limit for the unit.
	minQ REAL NULL,	-- Minimum reactive power limit for the unit.
	satDirectSubtransX REAL NULL,	-- Direct-axis subtransient reactance saturated, also known as Xd"sat.
	satDirectSyncX REAL NULL,	-- Direct-axes saturated synchronous reactance (xdsat); reciprocal of short-circuit ration. Used for short circuit data exchange, only for single fed short circuit on a generator. (4.3.4.2. in IEC 60909-0:2001).
	satDirectTransX REAL NULL,	-- Saturated Direct-axis transient reactance. The attribute is primarily used for short circuit calculations according to ANSI.
	x0 REAL NULL,	-- Zero sequence reactance of the synchronous machine.
	Xl REAL NULL,	-- Negative sequence reactance.
	Xq REAL NULL,
	Xqp REAL NULL,
	Xqpp REAL NULL,
	Tdop REAL NULL,
	Tdopp REAL NULL,
	Tqop REAL NULL,
	Tqopp REAL NULL
)
;

	-- The transformer core admittance.  Used to specify the core admittance of a transformer in a manner that can be shared among power transformers.
CREATE TABLE TransformerCoreAdmittance
(
	b REAL NULL,	-- Magnetizing branch susceptance (B mag).  The value can be positive or negative.
	b0 REAL NULL,	-- Zero sequence magnetizing branch susceptance.
	g REAL NULL,	-- Magnetizing branch conductance (G mag).
	g0 REAL NULL	-- Zero sequence magnetizing branch conductance.
)
;

	-- A conducting connection point of a power transformer. It corresponds to a physical transformer winding terminal. In earlier CIM versions, the TransformerWinding class served a similar purpose, but this class is more flexible because it associates to terminal but is not a specialization of ConductingEquipment.
CREATE TABLE TransformerEnd
(
	endNumber INTEGER NULL,	-- Number for this transformer end, corresponding to the end's order in the power transformer vector group or phase angle clock number. Highest voltage winding should be 1. Each end within a power transformer should have a unique subsequent end number. Note the transformer end number need not match the terminal sequence number.
	grounded INTEGER NULL,	-- Used only for Yn and Zn connections indicated by PowerTransformerEnd.connectionKind. If true, the neutral is grounded and attributes TransformerEnd.rground and TransformerEnd.xground are required. If false, the attributes TransformerEnd.rground and TransformerEnd.xground are not considered.
	rground REAL NULL,	-- Resistance part of neutral impedance. Zero indicates solidly grounded or grounded through a reactor.
	xground REAL NULL	-- Reactance part of neutral impedance. Zero indicates solidly grounded or grounded through a reactor.
)
;

	-- Transformer mesh impedance (Delta-model) between transformer ends. The typical case is that this class describes the impedance between two transformer ends pair-wise, i.e. the cardinalities at both transformer end associations are 1. However, in cases where two or more transformer ends are modelled the cardinalities are larger than 1.
CREATE TABLE TransformerMeshImpedance
(
	r REAL NULL,	-- Resistance between the 'from' and the 'to' end, seen from the 'from' end.
	r0 REAL NULL,	-- Zero-sequence resistance between the 'from' and the 'to' end, seen from the 'from' end.
	x REAL NULL,	-- Reactance between the 'from' and the 'to' end, seen from the 'from' end.
	x0 REAL NULL	-- Zero-sequence reactance between the 'from' and the 'to' end, seen from the 'from' end.
)
;
